generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Coach {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  password  String
  avatarUrl String?
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  Exercise Exercise[]
  Athlete  Athlete[]
}

enum DayOfWeek {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}

enum ExerciseCategory {
  CHEST
  BACK
  LEGS
  SHOULDERS
  BICEPS
  TRICEPS
  FOREARMS
}

model Exercise {
  id           String    @id @default(uuid())
  title        String
  description  String
  createdAt    DateTime  @default(now())
  dayOfWeek    String?
  category     String
  coachId      String?
  athleteId    String?
  normalUserId String?
  videoUrl     String?
  updatedAt    DateTime? @updatedAt

  athlete    Athlete?    @relation(fields: [athleteId], references: [id])
  coach      Coach?      @relation(fields: [coachId], references: [id])
  NormalUser NormalUser? @relation(fields: [normalUserId], references: [id])
}

model Athlete {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  password  String
  avatarUrl String?
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  coachId   String

  coach    Coach      @relation(fields: [coachId], references: [id])
  Exercise Exercise[]
}

model NormalUser {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  password  String?
  avatarUrl String?
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  Exercise Exercise[]
}
